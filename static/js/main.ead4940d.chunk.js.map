{"version":3,"sources":["../../src/utils/constants.js","../../src/services/contributions.js","../../src/components/GitHubCalendar.js","../../src/utils/index.js","CodeBlock.js","ForkMe.js","Demo.js","index.js"],"names":["DEFAULT_THEME","background","text","grade4","grade3","grade2","grade1","grade0","API_URL","getContributionsForDate","data","date","contrib","getGraphDataForYear","year","fullYear","blocks","now","firstDate","subYears","parse","lastDate","weekStart","getDay","addDays","firstRowDates","format","info","setDay","dateObj","dates","i","isAfter","getBlocksForYear","monthLabels","previousMonth","length","week","month","getMonth","x","acc","label","getMonthLabels","totalCount","contributions","begin","end","getContributionCountForLastYear","yearEntry","entry","String","getContributionCountForYear","a","years","options","username","fetch","Error","isCurrentYear","isSameYear","GitHubCalendar","graphs","error","this","prevProps","props","getGitHubGraphData","color","theme","textColor","emptyCellColor","base","createCalendarTheme","Object","fontSize","anchor","chart","marginBottom","calendar","maxWidth","height","backgroundColor","overflow","loading","meta","title","paddingBottom","borderBottom","getTheme","Math","object","blockMargin","blockSize","width","textHeight","day","dateFormat","className","getClassNameFor","style","getStyles","href","y","key","fill","data-tip","transform","getYear","children","styles","graph","xmlns","viewBox","textRendering","Component","PropTypes","Number","CodeBlock","svgStyle","position","top","right","border","ForkMe","aria-label","aria-hidden","d","transformOrigin","Demo","useState","setUsername","input","React","createRef","onSubmit","event","preventDefault","current","value","toLowerCase","type","placeholder","ref","required","marginTop","overflowX","Date","id","delayShow","html","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ead4940d.chunk.js","sourcesContent":["// GitHub theme\nexport const DEFAULT_THEME = {\n  background: 'transparent',\n  text: '#000',\n  grade4: '#196127',\n  grade3: '#239a3b',\n  grade2: '#7bc96f',\n  grade1: '#c6e48b',\n  grade0: '#ebedf0',\n};\n\nexport const NAMESPACE = 'react-github-calendar';\n\nexport const LINE_HEIGHT = 1.5;\nexport const MIN_DISTANCE_MONTH_LABELS = 2;\nexport const TITLE_SCALE_FACTOR = 1.25;\n","// Import modules separately to reduce bundle size\nimport addDays from 'date-fns/add_days';\nimport format from 'date-fns/format';\nimport getDay from 'date-fns/get_day';\nimport getMonth from 'date-fns/get_month';\nimport isAfter from 'date-fns/is_after';\nimport isSameYear from 'date-fns/is_same_year';\nimport parse from 'date-fns/parse';\nimport setDay from 'date-fns/set_day';\nimport subYears from 'date-fns/sub_years';\n\nconst API_URL = 'https://github-calendar.now.sh/v1/';\nconst DATE_FORMAT = 'YYYY-MM-DD';\n\nfunction getContributionsForDate(data, date) {\n  return data.contributions.find(contrib => contrib.date === date);\n}\n\nfunction getContributionCountForLastYear(data) {\n  const { contributions } = data;\n  const now = new Date();\n\n  // Start date for accumulating the values\n  const begin = contributions.findIndex(contrib => contrib.date === format(now, DATE_FORMAT));\n\n  // No data for today given\n  if (begin === -1) {\n    return 0;\n  }\n\n  // Check if there is data for the day one year past\n  let end = contributions.findIndex(contrib => {\n    return contrib.date === format(subYears(now, 1), DATE_FORMAT);\n  });\n\n  // Take the oldest contribution otherwise, if not enough data exists\n  if (end === -1) {\n    end = contributions.length - 1;\n  }\n\n  return contributions.slice(begin, end).reduce((acc, contrib) => acc + contrib.count, 0);\n}\n\nfunction getContributionCountForYear(data, year) {\n  const yearEntry = data.years.find(entry => entry.year === String(year));\n\n  return yearEntry ? yearEntry.total : 0;\n}\n\nfunction getBlocksForYear(year, data, fullYear) {\n  const now = new Date();\n  const firstDate = fullYear ? subYears(now, 1) : parse(`${year}-01-01`);\n  const lastDate = fullYear ? now : parse(`${year}-12-31`);\n\n  let weekStart = firstDate;\n\n  // The week starts on Sunday - add days to get to next sunday if neccessary\n  if (getDay(firstDate) !== 0) {\n    weekStart = addDays(firstDate, getDay(firstDate));\n  }\n\n  // Fetch graph data for first row (Sundays)\n  const firstRowDates = [];\n  while (weekStart <= lastDate) {\n    const date = format(weekStart, DATE_FORMAT);\n\n    firstRowDates.push({\n      date,\n      info: getContributionsForDate(data, date),\n    });\n\n    weekStart = setDay(weekStart, 7);\n  }\n\n  // Add the remainig days per week (column for column)\n  return firstRowDates.map(dateObj => {\n    const dates = [];\n    for (let i = 0; i <= 6; i += 1) {\n      const date = format(setDay(dateObj.date, i), DATE_FORMAT);\n\n      if (isAfter(date, lastDate)) {\n        break;\n      }\n\n      dates.push({\n        date,\n        info: getContributionsForDate(data, date),\n      });\n    }\n\n    return dates;\n  });\n}\n\nfunction getMonthLabels(blocks, fullYear) {\n  let previousMonth = 0; // January\n  const { length } = blocks;\n\n  return blocks.slice(0, fullYear ? length - 1 : length).reduce((acc, week, x) => {\n    const date = parse(week[0].date);\n    const month = getMonth(date) + 1;\n    const monthChanged = month !== previousMonth;\n    const firstMonthIsDec = x === 0 && month === 12;\n\n    if (monthChanged && !firstMonthIsDec) {\n      acc.push({\n        x,\n        label: format(date, 'MMM'),\n      });\n      previousMonth = month;\n    }\n\n    return acc;\n  }, []);\n}\n\nfunction getGraphDataForYear(year, data, fullYear) {\n  const blocks = getBlocksForYear(year, data, fullYear);\n  const monthLabels = getMonthLabels(blocks, fullYear);\n  const totalCount = fullYear\n    ? getContributionCountForLastYear(data)\n    : getContributionCountForYear(data, year);\n\n  return {\n    year,\n    blocks,\n    monthLabels,\n    totalCount,\n  };\n}\n\n/**\n * Get the GitHub contributions for a specific user\n * @param options\n * @throws {Error} - Throws an error if the request fails or no data is available\n * @return {Promise<{blocks, monthLabels, totalCount}>} - A promise containing the data\n */\nexport async function getGitHubGraphData(options) {\n  const { years, fullYear, username } = options;\n  const data = await (await fetch(API_URL + username)).json();\n\n  if (!data.years.length) {\n    throw new Error('No data available');\n  }\n\n  return years.map(year => {\n    const isCurrentYear = isSameYear(parse(String(year)), new Date());\n\n    return getGraphDataForYear(year, data, isCurrentYear && fullYear);\n  });\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import modules separately to reduce bundle size\nimport format from 'date-fns/format';\nimport getYear from 'date-fns/get_year';\n\nimport {\n  DEFAULT_THEME,\n  LINE_HEIGHT,\n  MIN_DISTANCE_MONTH_LABELS,\n  NAMESPACE,\n  TITLE_SCALE_FACTOR,\n} from '../utils/constants';\nimport { getGitHubGraphData } from '../services/contributions';\nimport { createCalendarTheme } from '../utils';\n\nclass GitHubCalendar extends Component {\n  state = {\n    graphs: null,\n    error: null,\n  };\n\n  componentDidMount() {\n    this.fetchData(this.props);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.username !== prevProps.username) {\n      this.setState({\n        graphs: null,\n        error: false,\n      });\n      this.fetchData(this.props);\n    }\n  }\n\n  fetchData({ years, username, fullYear }) {\n    getGitHubGraphData({\n      years,\n      username,\n      fullYear,\n    })\n      .then(graphs => this.setState({ graphs }))\n      .catch(error => this.setState({ error }));\n  }\n\n  getTheme() {\n    const { color, theme } = this.props;\n\n    if (typeof color === 'string') {\n      return createCalendarTheme(color);\n    }\n\n    return theme ? Object.assign({}, DEFAULT_THEME, theme) : DEFAULT_THEME;\n  }\n\n  // Unfortunately there is no support for CSS modules right now...\n  getStyles() {\n    const { fontSize, theme } = this.props;\n\n    return {\n      anchor: {\n        color: 'inherit',\n      },\n      chart: {\n        marginBottom: '1rem',\n      },\n      calendar: {\n        maxWidth: '100%',\n        height: 'auto',\n        marginBottom: '0.25rem',\n        backgroundColor: theme.background,\n        overflow: 'visible',\n      },\n      loading: {\n        fontSize: '90%',\n      },\n      meta: {\n        fontSize,\n      },\n      title: {\n        marginBottom: '0.5rem',\n        paddingBottom: '0.25rem',\n        borderBottom: `2px solid ${this.getTheme().grade0}`,\n        fontSize: `${Math.round(fontSize * TITLE_SCALE_FACTOR)}px`,\n      },\n    };\n  }\n\n  getClassNameFor(object) {\n    return `${NAMESPACE}__${object}`;\n  }\n\n  getDimensions() {\n    const { blockMargin, blockSize, fontSize } = this.props;\n\n    const textHeight = Math.round(fontSize * LINE_HEIGHT);\n\n    // Since weeks start on Sunday, there is a good chance that the graph starts\n    // in the week before January 1st. Therefore, the calendar shows 53 weeks.\n    const width = (52 + 1) * (blockSize + blockMargin) - blockMargin;\n    const height = textHeight + (blockSize + blockMargin) * 7 - blockMargin;\n\n    return { width, height };\n  }\n\n  getTooltipMessage(day) {\n    const { dateFormat } = this.props;\n\n    return `<strong>${day.info.count} contributions</strong> on ${format(day.date, dateFormat)}`;\n  }\n\n  renderTitle() {\n    const { username } = this.props;\n\n    return (\n      <div className={this.getClassNameFor('title')} style={this.getStyles().title}>\n        <a\n          href={`https://github.com/${username}`}\n          title=\"GitHub profile\"\n          style={this.getStyles().anchor}\n        >\n          @{username} on GitHub\n        </a>\n      </div>\n    );\n  }\n\n  renderMonthLabels(monthLabels) {\n    const { blockSize, blockMargin, fontSize } = this.props;\n\n    // Remove the first month label if there's not enough space to the next one\n    // (end of previous month)\n    if (monthLabels[1].x - monthLabels[0].x <= MIN_DISTANCE_MONTH_LABELS) {\n      monthLabels.shift();\n    }\n\n    return monthLabels.map(month => (\n      <text\n        x={(blockSize + blockMargin) * month.x}\n        y={fontSize}\n        key={month.x}\n        style={{\n          fill: this.getTheme().text,\n          fontSize,\n        }}\n      >\n        {month.label}\n      </text>\n    ));\n  }\n\n  renderBlocks(blocks) {\n    const { blockSize, blockMargin, fontSize } = this.props;\n\n    const theme = this.getTheme();\n    const textHeight = Math.round(fontSize * LINE_HEIGHT);\n\n    return blocks\n      .map(week =>\n        week.map((day, y) => (\n          <rect\n            x=\"0\"\n            y={textHeight + (blockSize + blockMargin) * y}\n            width={blockSize}\n            height={blockSize}\n            fill={theme[`grade${day.info ? day.info.intensity : 0}`]}\n            data-tip={day.info && day.info.count ? this.getTooltipMessage(day) : null}\n            key={day.date}\n          />\n        )),\n      )\n      .map((week, x) => (\n        <g key={x} transform={`translate(${(blockSize + blockMargin) * x}, 0)`}>\n          {week}\n        </g>\n      ));\n  }\n\n  renderMeta(year, totalCount) {\n    const { fullYear } = this.props;\n    const isCurrentYear = getYear(new Date()) === year;\n\n    return (\n      <div className={this.getClassNameFor('meta')} style={this.getStyles().meta}>\n        {isCurrentYear && fullYear ? 'Last year' : year}\n        {' – '}\n        {isCurrentYear && !fullYear ? 'So far ' : null}\n        {totalCount} contributions\n      </div>\n    );\n  }\n\n  render() {\n    const { children, style } = this.props;\n    const { error, graphs } = this.state;\n\n    const styles = this.getStyles();\n\n    const { width, height } = this.getDimensions();\n\n    if (error) {\n      return <p>Error :(</p>;\n    }\n\n    if (!graphs) {\n      return (\n        <div className={this.getClassNameFor('loading')} style={this.getStyles().loading}>\n          Loading …\n        </div>\n      );\n    }\n\n    return (\n      <article className={NAMESPACE} style={style}>\n        {this.renderTitle()}\n        {graphs.map((graph, i) => {\n          const { year, blocks, monthLabels, totalCount } = graph;\n\n          return (\n            <div\n              key={year}\n              className={this.getClassNameFor('chart')}\n              style={i < graphs.length - 1 ? styles.chart : null}\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width={width}\n                height={height}\n                viewBox={`0 0 ${width} ${height}`}\n                textRendering=\"optimizeLegibility\"\n                className={this.getClassNameFor('calendar')}\n                style={styles.calendar}\n              >\n                {this.renderMonthLabels(monthLabels)}\n                {this.renderBlocks(blocks)}\n              </svg>\n\n              {this.renderMeta(year, totalCount)}\n              {children}\n            </div>\n          );\n        })}\n      </article>\n    );\n  }\n}\n\nGitHubCalendar.propTypes = {\n  blockSize: PropTypes.number,\n  blockMargin: PropTypes.number,\n  children: PropTypes.node,\n  color: PropTypes.string,\n  dateFormat: PropTypes.string,\n  fontSize: PropTypes.number,\n  fullYear: PropTypes.bool,\n  theme: PropTypes.objectOf(PropTypes.string),\n  username: PropTypes.string.isRequired,\n  years: PropTypes.arrayOf(PropTypes.number),\n};\n\nGitHubCalendar.defaultProps = {\n  blockSize: 12,\n  blockMargin: 2,\n  color: null,\n  dateFormat: 'MMM D, YYYY',\n  fontSize: 14,\n  fullYear: true,\n  theme: DEFAULT_THEME,\n  years: [Number(format(new Date(), 'YYYY'))],\n};\n\nexport default GitHubCalendar;\n","import color from 'tinycolor2';\n\nimport { DEFAULT_THEME } from './constants';\n\n/**\n * Create a calendar color theme based on one color\n * @param {string} baseColor - The base color all lighter hues are calculated from\n * @param {string} textColor - Text color\n * @param {string} emptyCellColor\n * @param {string} background - Calendar background color. `transparent` by default\n * @throws {Error} - Throws an error if the color could not be parsed\n * @return {object} - The color theme object\n */\nexport function createCalendarTheme(\n  baseColor,\n  textColor = 'inherit',\n  emptyCellColor = color('white')\n    .darken(8)\n    .toHslString(),\n  background = 'transparent',\n) {\n  const base = color(baseColor);\n\n  if (!base.isValid()) {\n    return DEFAULT_THEME;\n  }\n\n  const text = color(textColor).isValid() ? color(textColor) : DEFAULT_THEME.text;\n\n  return {\n    background,\n    text,\n    grade4: base.setAlpha(0.92).toHslString(),\n    grade3: base.setAlpha(0.76).toHslString(),\n    grade2: base.setAlpha(0.6).toHslString(),\n    grade1: base.setAlpha(0.44).toHslString(),\n    grade0: emptyCellColor,\n  };\n}\n","import React from 'react';\n\nconst CodeBlock = ({ children, ...props }) => (\n  <pre className=\"code-block\" {...props}>\n    <code>{children}</code>\n  </pre>\n);\n\nexport default CodeBlock;\n","import React from 'react';\n\nconst svgStyle = {\n  position: 'absolute',\n  top: 0,\n  right: 0,\n  border: 0,\n  fill: '#fff',\n  color: '#151513',\n};\n\nconst ForkMe = () => (\n  <a\n    href=\"https://github.com/grubersjoe/react-github-calendar\"\n    className=\"github-corner\"\n    aria-label=\"View source on GitHub\"\n  >\n    <svg width=\"80\" height=\"80\" viewBox=\"0 0 250 250\" style={svgStyle} aria-hidden=\"true\">\n      <path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\" />\n      <path\n        d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\"\n        fill=\"hsl(313, 78%, 20%)\"\n        style={{ transformOrigin: '130px 106px' }}\n        className=\"octo-arm\"\n      />\n      <path\n        d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\"\n        fill=\"hsl(313, 78%, 20%)\"\n        className=\"octo-body\"\n      />\n    </svg>\n  </a>\n);\n\nexport default ForkMe;\n","import React, { useState } from 'react';\nimport GitHubCalendar from 'react-github-calendar';\nimport ReactTooltip from 'react-tooltip';\nimport { format } from 'date-fns';\n\nimport 'typeface-public-sans';\nimport './Demo.css';\n\nimport CodeBlock from './CodeBlock';\nimport ForkMe from './ForkMe';\n\nconst Demo = () => {\n  const [username, setUsername] = useState('grubersjoe');\n  const input = React.createRef();\n\n  const updateUsername = event => {\n    event.preventDefault();\n    setUsername(String(input.current.value).toLowerCase());\n  };\n\n  return (\n    <div>\n      <header>\n        <ForkMe />\n        <div className=\"container\">\n          <h1>GitHub Contributions Calendar</h1>\n          <div>A React component to display a GitHub contributions graph</div>\n          <form onSubmit={updateUsername}>\n            <input type=\"text\" placeholder=\"Enter your GitHub username\" ref={input} required />\n            <button type=\"submit\">Show calendar</button>\n          </form>\n        </div>\n      </header>\n\n      <main className=\"container\">\n        <GitHubCalendar username={username} />\n\n        <section>\n          <h2>Installation</h2>\n          <CodeBlock style={{ marginTop: '0.5rem' }}>yarn install react-github-calendar</CodeBlock>\n          <p>Then in your code:</p>\n          <CodeBlock>\n            {`import GitHubCalendar from 'react-github-calendar';\n\n<GitHubCalendar username=\"${username}\" />`}\n          </CodeBlock>\n        </section>\n\n        <section>\n          <h2>Component properties</h2>\n          <div style={{ overflowX: 'auto' }}>\n            <table>\n              <thead>\n                <tr>\n                  <th>Property</th>\n                  <th>Type</th>\n                  <th>Default</th>\n                  <th>Description</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>username</td>\n                  <td>String</td>\n                  <td>-</td>\n                  <td>\n                    A GitHub username (<em>required, obviously</em>)\n                  </td>\n                </tr>\n                <tr>\n                  <td>blockMargin</td>\n                  <td>Number</td>\n                  <td>2</td>\n                  <td>Margin between blocks</td>\n                </tr>\n                <tr>\n                  <td>blockSize</td>\n                  <td>Number</td>\n                  <td>12</td>\n                  <td>Size of one block (one day)</td>\n                </tr>\n                <tr>\n                  <td>color</td>\n                  <td>\n                    String|<a href=\"https://www.npmjs.com/package/color\">Color</a>\n                  </td>\n                  <td>null</td>\n                  <td>Base color to compute graph intensity colors (see below)</td>\n                </tr>\n                <tr>\n                  <td>dateFormat</td>\n                  <td>String</td>\n                  <td>'MMM D, YYYY'</td>\n                  <td>\n                    A{' '}\n                    <code>\n                      <a href=\"https://date-fns.org/v1.29.0/docs/format\">date-fns/format</a>\n                    </code>{' '}\n                    compatible date string\n                  </td>\n                </tr>\n                <tr>\n                  <td>fontSize</td>\n                  <td>Number</td>\n                  <td>14</td>\n                  <td>Base font size for text in chart. The title above (@user) is 25% larger.</td>\n                </tr>\n                <tr>\n                  <td>fullYear</td>\n                  <td>Boolean</td>\n                  <td>true</td>\n                  <td>\n                    Whether to show the whole last year starting now or this year only (starting in\n                    January).\n                  </td>\n                </tr>\n                <tr>\n                  <td>theme</td>\n                  <td>Object</td>\n                  <td>\n                    <em>GitHub theme</em>\n                  </td>\n                  <td>A object specifying all theme colors explicitly (see below)</td>\n                </tr>\n                <tr>\n                  <td>tooltips</td>\n                  <td>Boolean</td>\n                  <td>true</td>\n                  <td>\n                    Whether to add <code>data-tip</code> attributes to the blocks. Add{' '}\n                    <code>react-tooltip</code> and use it as child of this component. See below\n                    example.\n                  </td>\n                </tr>\n                <tr>\n                  <td>years</td>\n                  <td>Number[]</td>\n                  <td>[{format(new Date(), 'YYYY')}]</td>\n                  <td>\n                    List of to be rendered years. Defaults to the current year. If no data is\n                    available the chart for this year will be ommited.\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </section>\n\n        <section>\n          <h2>Examples</h2>\n\n          <ol>\n            <li>\n              <a href=\"#show-contributions-of-last-year\">Show contributions of last year</a>\n            </li>\n            <li>\n              <a href=\"#display-this-year-only\">Display this year only</a>\n            </li>\n            <li>\n              <a href=\"#show-several-years\">Show several years</a>\n            </li>\n            <li>\n              <a href=\"#set-the-color-theme\">Set the color theme</a>\n            </li>\n            <li>\n              <a href=\"#add-tooltips\">Add tooltips</a>\n            </li>\n            <li>\n              <a href=\"#different-block-size\">Different block size</a>\n            </li>\n            <li>\n              <a href=\"#different-block-margin\">Different block margin</a>\n            </li>\n            <li>\n              <a href=\"#chart-font-size\">Chart font size</a>\n            </li>\n          </ol>\n\n          <hr />\n\n          <h3 id=\"show-contributions-of-last-year\">Show contributions of last year</h3>\n          <p>By default the last whole year is shown.</p>\n          <CodeBlock>{`<GitHubCalendar username=\"${username}\" />`}</CodeBlock>\n          <GitHubCalendar username={username} />\n\n          <hr />\n\n          <h3 id=\"display-this-year-only\">Display this year only</h3>\n          <p>\n            You might prefer the calendar for the current year to start in January (instead of\n            showing the last twelve months).\n          </p>\n          <CodeBlock>{`<GitHubCalendar username=\"${username}\" fullYear={false} />`}</CodeBlock>\n          <GitHubCalendar username={username} fullYear={false} />\n\n          <hr />\n\n          <h3 id=\"show-several-years\">Show several years</h3>\n          <p>To display multiple years, pass an array into the component:</p>\n          <CodeBlock>\n            {`<GitHubCalendar username=\"${username}\" years={[2018, 2017]} fullYear={false}/>`}\n          </CodeBlock>\n          <GitHubCalendar username={username} years={[2018, 2017]} fullYear={false} />\n\n          <hr />\n\n          <h3 id=\"set-the-color-theme\">Set the color theme</h3>\n          <p>\n            Either set a base color (any valid CSS color) to calculate the color hues for the\n            contribution intensity automatically or specify the different theme colors explicitly.\n            If a color is set, the theme will be ignored. If neither color or theme is set, the\n            standard GitHub colors will be used (as in these examples).\n          </p>\n          <CodeBlock>{`<GitHubCalendar username=\"${username}\" color=\"hsl(203, 82%, 33%)\" />`}</CodeBlock>\n          <GitHubCalendar username={username} color=\"hsl(203, 82%, 33%)\" />\n          <p>Set the colors explicitly like this:</p>\n          <CodeBlock>\n            {`const defaultTheme = {\n    background: 'transparent',\n    text: '#000',\n    grade4: '#196127',\n    grade3: '#239a3b',\n    grade2: '#7bc96f',\n    grade1: '#c6e48b',\n    grade0: '#ebedf0',\n  };\n\n  <GitHubCalendar username=\"${username}\" theme={defaultTheme} />`}\n          </CodeBlock>\n          <GitHubCalendar username={username} />\n\n          <hr />\n\n          <h3 id=\"add-tooltips\">Add tooltips</h3>\n          <p>\n            In order to show tooltips on hover, you need to add another dependency{' '}\n            <code>react-tooltip</code>. Add this component then as child of the calendar. Make sure\n            to enable the `html` property in the <code>ReactTooltip</code> component to display the\n            message correctly.\n          </p>\n          <CodeBlock>\n            {`<div>\n    <GitHubCalendar username=\"${username}\">\n      <ReactTooltip delayShow={50} html />\n    </GitHubCalendar>\n  </div>`}\n          </CodeBlock>\n          <div>\n            <GitHubCalendar username={username}>\n              <ReactTooltip delayShow={50} html />\n            </GitHubCalendar>\n          </div>\n\n          <hr />\n\n          <h3 id=\"different-block-size\">Different block size</h3>\n          <p>The block size (12 per default) is configurable:</p>\n          <CodeBlock>{`<GitHubCalendar username=\"${username}\" blockSize={10} />`}</CodeBlock>\n          <GitHubCalendar username={username} blockSize={10} />\n\n          <hr />\n\n          <h3 id=\"different-block-margin\">Different block margin (and size)</h3>\n          <p>Analogously the block margin can be adjusted.</p>\n          <CodeBlock>{`<GitHubCalendar username=\"${username}\" blockSize={10} blockMargin={4} />`}</CodeBlock>\n          <GitHubCalendar username={username} blockSize={10} blockMargin={4} />\n\n          <hr />\n\n          <h3 id=\"chart-font-size\">Chart font size</h3>\n          <p>\n            Finally, there is a property to set the fontsize of the text inside the chart. This\n            comes in handy, if a large block size or margin is set. The default base font size is\n            14px.\n          </p>\n          <CodeBlock>{`<GitHubCalendar username=\"${username}\" fontSize={14} blockSize={12} />`}</CodeBlock>\n          <GitHubCalendar username={username} fontSize={14} blockSize={12} />\n        </section>\n      </main>\n    </div>\n  );\n};\n\nexport default Demo;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Demo from './Demo';\n\nReactDOM.render(<Demo />, document.getElementById('root'));\n"],"sourceRoot":""}