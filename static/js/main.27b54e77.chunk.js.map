{"version":3,"sources":["../../node_modules/style-inject/dist/style-inject.es.js","../../src/utils/constants.ts","../../src/hooks/usePrevious.ts","../../src/services/contributions.ts","../../src/utils/index.ts","../../src/components/GitHubCalendar/index.tsx","CodeBlock.tsx","ForkMe.tsx","Demo.tsx","index.tsx"],"names":["css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","DEFAULT_THEME","background","text","grade4","grade3","grade2","grade1","grade0","NAMESPACE","usePrevious","useRef","useEffect","API_URL","getContributionsForDate","data","contrib","getGraphDataForYear","year","blocks","now","firstDate","fullYear","subYears","parseISO","lastDate","weekStart","getDay","addDays","firstRowDates","date","format","info","setDay","dateObj","dates","i","isAfter","getBlocksForYear","monthLabels","weeks","previousMonth","firstWeekDay","week","month","getMonth","x","labels","label","getMonthLabels","totalCount","contributions","begin","end","acc","getContributionCountForLastYear","yearEntry","entry","String","getContributionCountForYear","a","options","username","years","fetch","Error","isCurrentYear","isSameYear","getClassName","name","blockSize","blockMargin","children","color","undefined","dateFormat","fontSize","theme","Number","useState","graphs","setGraphs","error","setError","prevYears","prevUsername","prevFullYear","fetchData","useCallback","getGitHubGraphData","Object","textColor","emptyCellColor","base","createCalendarTheme","day","y","textHeight","Math","width","height","getDimensions","console","className","borderBottom","getTheme","styles","href","title","renderTitle","graph","key","xmlns","viewBox","backgroundColor","fill","renderMonthLabels","data-tip","getTooltipMessage","transform","renderBlocks","getYear","renderMeta","CodeBlock","props","position","top","right","border","ForkMe","aria-label","aria-hidden","d","transformOrigin","Demo","setUsername","input","React","createRef","onSubmit","event","preventDefault","current","value","toLowerCase","placeholder","required","marginTop","overflowX","Date","id","delayShow","html","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.27b54e77.chunk.js","sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","// GitHub theme\nexport type Theme = {\n  [key: string]: string;\n  background: string;\n  text: string;\n  grade4: string;\n  grade3: string;\n  grade2: string;\n  grade1: string;\n  grade0: string;\n};\n\nexport const DEFAULT_THEME = {\n  background: 'transparent',\n  text: '#000',\n  grade4: '#196127',\n  grade3: '#239a3b',\n  grade2: '#7bc96f',\n  grade1: '#c6e48b',\n  grade0: '#ebedf0',\n};\n\nexport const NAMESPACE = 'react-github-calendar';\n\nexport const LINE_HEIGHT = 1.5;\nexport const MIN_DISTANCE_MONTH_LABELS = 2;\nexport const TITLE_SCALE_FACTOR = 1.25;\n","import { useRef, useEffect } from 'react';\n\nexport function usePrevious<T>(value: T) {\n  const ref = useRef<T>(value);\n\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n\n  return ref.current;\n}\n","// Import modules separately to reduce bundle size\nimport addDays from 'date-fns/addDays';\nimport format from 'date-fns/format';\nimport getDay from 'date-fns/getDay';\nimport getMonth from 'date-fns/getMonth';\nimport isAfter from 'date-fns/isAfter';\nimport isSameYear from 'date-fns/isSameYear';\nimport parseISO from 'date-fns/parseISO';\nimport setDay from 'date-fns/setDay';\nimport subYears from 'date-fns/subYears';\n\nconst API_URL = 'https://github-calendar.now.sh/v1/';\nconst DATE_FORMAT = 'yyyy-MM-dd';\n\nexport type GraphData = {\n  year: number;\n  blocks: Block[][];\n  monthLabels: { x: number; label: string }[];\n  totalCount: number;\n};\n\nexport type Block = {\n  date: string;\n  info?: {\n    date: string;\n    count: number;\n    color: string;\n    intensity: number;\n  };\n};\n\nexport type MonthLabels = {\n  x: number;\n  label: string;\n}[];\n\nexport type RequestOptions = {\n  fullYear: boolean;\n  username: string;\n  years: number[];\n};\n\ntype ApiResult = {\n  years: {\n    year: string;\n    total: number;\n    range: {\n      start: string;\n      end: string;\n    };\n  }[];\n  contributions: {\n    date: string;\n    count: number;\n    color: string;\n    intensity: number;\n  }[];\n};\n\nfunction getContributionsForDate(data: ApiResult, date: string) {\n  return data.contributions.find(contrib => contrib.date === date);\n}\n\nfunction getContributionCountForLastYear(data: ApiResult) {\n  const { contributions } = data;\n  const now = new Date();\n\n  // Start date for accumulating the values\n  const begin = contributions.findIndex(contrib => contrib.date === format(now, DATE_FORMAT));\n\n  // No data for today given\n  if (begin === -1) {\n    return 0;\n  }\n\n  // Check if there is data for the day one year past\n  let end = contributions.findIndex(contrib => {\n    return contrib.date === format(subYears(now, 1), DATE_FORMAT);\n  });\n\n  // Take the oldest contribution otherwise, if not enough data exists\n  if (end === -1) {\n    end = contributions.length - 1;\n  }\n\n  return contributions.slice(begin, end).reduce((acc, contrib) => acc + contrib.count, 0);\n}\n\nfunction getContributionCountForYear(data: ApiResult, year: number) {\n  const yearEntry = data.years.find(entry => entry.year === String(year));\n\n  return yearEntry ? yearEntry.total : 0;\n}\n\nfunction getBlocksForYear(year: number, data: ApiResult, fullYear: boolean) {\n  const now = new Date();\n  const firstDate = fullYear ? subYears(now, 1) : parseISO(`${year}-01-01`);\n  const lastDate = fullYear ? now : parseISO(`${year}-12-31`);\n\n  let weekStart = firstDate;\n\n  // The week starts on Sunday - add days to get to next sunday if neccessary\n  if (getDay(firstDate) !== 0) {\n    weekStart = addDays(firstDate, getDay(firstDate));\n  }\n\n  // Fetch graph data for first row (Sundays)\n  const firstRowDates = [];\n  while (weekStart <= lastDate) {\n    const date = format(weekStart, DATE_FORMAT);\n\n    firstRowDates.push({\n      date,\n      info: getContributionsForDate(data, date),\n    });\n\n    weekStart = setDay(weekStart, 7);\n  }\n\n  // Add the remainig days per week (column for column)\n  return firstRowDates.map(dateObj => {\n    const dates = [];\n    for (let i = 0; i <= 6; i += 1) {\n      const date = format(setDay(parseISO(dateObj.date), i), DATE_FORMAT);\n\n      if (isAfter(parseISO(date), lastDate)) {\n        break;\n      }\n\n      dates.push({\n        date,\n        info: getContributionsForDate(data, date),\n      });\n    }\n\n    return dates;\n  });\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction getMonthLabels(blocks: GraphData['blocks'], fullYear: boolean): MonthLabels {\n  const weeks = blocks.slice(0, fullYear ? blocks.length - 1 : blocks.length);\n  let previousMonth = 0; // January\n\n  return weeks.reduce<MonthLabels>((labels, week, x) => {\n    const firstWeekDay = parseISO(week[0].date);\n    const month = getMonth(firstWeekDay) + 1;\n    const monthChanged = month !== previousMonth;\n    const firstMonthIsDecember = x === 0 && month === 12;\n\n    if (monthChanged && !firstMonthIsDecember) {\n      labels.push({\n        x,\n        label: format(firstWeekDay, 'MMM'),\n      });\n      previousMonth = month;\n    }\n\n    return labels;\n  }, []);\n}\n\nfunction getGraphDataForYear(year: number, data: ApiResult, fullYear: boolean): GraphData {\n  const blocks = getBlocksForYear(year, data, fullYear);\n  const monthLabels = getMonthLabels(blocks, fullYear);\n  const totalCount = fullYear\n    ? getContributionCountForLastYear(data)\n    : getContributionCountForYear(data, year);\n\n  return {\n    year,\n    blocks,\n    monthLabels,\n    totalCount,\n  };\n}\n\nexport async function getGitHubGraphData(options: RequestOptions): Promise<GraphData[]> {\n  const { fullYear, username, years } = options;\n  const data: ApiResult = await (await fetch(API_URL + username)).json();\n\n  if (!data.years.length) {\n    throw Error('No data available');\n  }\n\n  return years.map(year => {\n    const isCurrentYear = isSameYear(parseISO(String(year)), new Date());\n\n    return getGraphDataForYear(year, data, isCurrentYear && fullYear);\n  });\n}\n","import color, { ColorInput } from 'tinycolor2';\n\nimport { DEFAULT_THEME, NAMESPACE, Theme } from './constants';\n\nexport function createCalendarTheme(\n  baseColor: ColorInput,\n  textColor = 'inherit',\n  emptyCellColor = color('white')\n    .darken(8)\n    .toHslString(),\n  background = 'transparent',\n): Theme {\n  const base = color(baseColor);\n\n  if (!base.isValid()) {\n    return DEFAULT_THEME;\n  }\n\n  const text = color(textColor).isValid() ? String(color(textColor)) : DEFAULT_THEME.text;\n\n  return {\n    background,\n    text,\n    grade4: base.setAlpha(0.92).toHslString(),\n    grade3: base.setAlpha(0.76).toHslString(),\n    grade2: base.setAlpha(0.6).toHslString(),\n    grade1: base.setAlpha(0.44).toHslString(),\n    grade0: emptyCellColor,\n  };\n}\n\nexport function getClassName(name: string, extra?: string) {\n  if (extra) {\n    return `${NAMESPACE}__${name} ${extra}`;\n  }\n\n  return `${NAMESPACE}__${name}`;\n}\n","import React, { useState, CSSProperties, useEffect, useCallback } from 'react';\nimport format from 'date-fns/format';\nimport parseISO from 'date-fns/parseISO';\nimport getYear from 'date-fns/getYear';\nimport { ColorInput } from 'tinycolor2';\n\nimport styles from './styles.css';\n\nimport {\n  DEFAULT_THEME,\n  LINE_HEIGHT,\n  MIN_DISTANCE_MONTH_LABELS,\n  NAMESPACE,\n  TITLE_SCALE_FACTOR,\n  Theme,\n} from '../../utils/constants';\nimport { usePrevious } from '../../hooks/usePrevious';\nimport { getGitHubGraphData, GraphData, Block } from '../../services/contributions';\nimport { createCalendarTheme, getClassName } from '../../utils';\n\nexport type Props = {\n  username: string;\n  blockSize?: number;\n  blockMargin?: number;\n  color?: ColorInput;\n  dateFormat?: string;\n  fontSize?: number;\n  fullYear?: boolean;\n  style?: CSSProperties;\n  theme?: Theme;\n  years?: number[];\n};\n\nconst GitHubCalendar: React.FC<Props> = ({\n  blockSize = 12,\n  blockMargin = 2,\n  children,\n  color = undefined,\n  dateFormat = 'MMM d, yyyy',\n  fontSize = 14,\n  fullYear = true,\n  theme = undefined,\n  username,\n  style = {},\n  years = [Number(format(new Date(), 'yyyy'))],\n}) => {\n  const [graphs, setGraphs] = useState<GraphData[] | null>(null);\n  const [error, setError] = useState<Error | null>(null);\n\n  const prevYears = usePrevious(years);\n  const prevUsername = usePrevious(username);\n  const prevFullYear = usePrevious(fullYear);\n\n  const fetchData = useCallback(() => {\n    setError(null);\n    getGitHubGraphData({\n      years,\n      username,\n      fullYear,\n    })\n      .then(graphs => setGraphs(graphs))\n      .catch((error: Error) => setError(error));\n  }, [years, username, fullYear]);\n\n  // Fetch data on mount\n  useEffect(() => {\n    fetchData();\n  }, []); // eslint-disable-line\n\n  // Refetch if relevant props change\n  useEffect(() => {\n    if (\n      prevFullYear !== fullYear ||\n      prevUsername !== username ||\n      prevYears.some(y => !years.includes(y))\n    ) {\n      fetchData();\n    }\n  }, [fetchData, fullYear, prevFullYear, prevUsername, prevYears, username, years]);\n\n  function getTheme(): Theme {\n    if (theme) {\n      return Object.assign({}, DEFAULT_THEME, theme);\n    }\n\n    if (color) {\n      return createCalendarTheme(color);\n    }\n\n    return DEFAULT_THEME;\n  }\n\n  function getDimensions() {\n    const textHeight = Math.round(fontSize * LINE_HEIGHT);\n\n    // Since weeks start on Sunday, there is a good chance that the graph starts\n    // in the week before January 1st. Therefore, the calendar shows 53 weeks.\n    const width = (52 + 1) * (blockSize + blockMargin) - blockMargin;\n    const height = textHeight + (blockSize + blockMargin) * 7 - blockMargin;\n\n    return { width, height };\n  }\n\n  function getTooltipMessage(day: Required<Block>) {\n    const date = parseISO(day.date);\n    return `<strong>${day.info.count} contributions</strong> on ${format(date, dateFormat)}`;\n  }\n\n  function renderTitle() {\n    const style = {\n      borderBottom: `2px solid ${getTheme().grade0}`,\n      fontSize: `${Math.round(fontSize * TITLE_SCALE_FACTOR)}px`,\n    };\n\n    return (\n      <div className={getClassName('title', styles.title)} style={style}>\n        <a\n          href={`https://github.com/${username}`}\n          title=\"GitHub profile\"\n          style={{ color: 'inherit' }}\n        >\n          @{username} on GitHub\n        </a>\n      </div>\n    );\n  }\n\n  function renderMonthLabels(monthLabels: GraphData['monthLabels']) {\n    const style = {\n      fill: getTheme().text,\n      fontSize,\n    };\n\n    // Remove the first month label if there's not enough space to the next one\n    // (end of previous month)\n    if (monthLabels[1].x - monthLabels[0].x <= MIN_DISTANCE_MONTH_LABELS) {\n      monthLabels.shift();\n    }\n\n    return monthLabels.map(month => (\n      <text x={(blockSize + blockMargin) * month.x} y={fontSize} key={month.x} style={style}>\n        {month.label}\n      </text>\n    ));\n  }\n\n  function renderBlocks(blocks: GraphData['blocks']) {\n    const theme = getTheme();\n    const textHeight = Math.round(fontSize * LINE_HEIGHT);\n\n    return blocks\n      .map(week =>\n        week.map((day, y) => (\n          <rect\n            x=\"0\"\n            y={textHeight + (blockSize + blockMargin) * y}\n            width={blockSize}\n            height={blockSize}\n            fill={theme[`grade${day.info ? day.info.intensity : 0}`]}\n            data-tip={day.info ? getTooltipMessage(day as Required<Block>) : null}\n            key={day.date}\n          />\n        )),\n      )\n      .map((week, x) => (\n        <g key={x} transform={`translate(${(blockSize + blockMargin) * x}, 0)`}>\n          {week}\n        </g>\n      ));\n  }\n\n  function renderMeta(year: number, totalCount: number) {\n    const isCurrentYear = getYear(new Date()) === year;\n\n    return (\n      <div className={getClassName('meta')} style={{ fontSize }}>\n        {isCurrentYear && fullYear ? 'Last year' : year}\n        {' – '}\n        {isCurrentYear && !fullYear ? 'So far ' : null}\n        {totalCount} contributions\n      </div>\n    );\n  }\n\n  const { width, height } = getDimensions();\n\n  if (error) {\n    console.error(error);\n    return <p>Error :(</p>;\n  }\n\n  if (!graphs) {\n    return <div className={getClassName('loading', styles.loading)}>Loading …</div>;\n  }\n\n  return (\n    <article className={NAMESPACE} style={style}>\n      {renderTitle()}\n      {graphs.map(graph => {\n        const { year, blocks, monthLabels, totalCount } = graph;\n\n        return (\n          <div key={year} className={getClassName('chart', styles.chart)}>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width={width}\n              height={height}\n              viewBox={`0 0 ${width} ${height}`}\n              className={getClassName('calendar', styles.calendar)}\n              style={{ backgroundColor: theme?.background }}\n            >\n              {renderMonthLabels(monthLabels)}\n              {renderBlocks(blocks)}\n            </svg>\n\n            {renderMeta(year, totalCount)}\n            {children}\n          </div>\n        );\n      })}\n    </article>\n  );\n};\n\nexport default GitHubCalendar;\n","import React, { CSSProperties, HTMLAttributes } from 'react';\n\ntype Props = HTMLAttributes<HTMLPreElement> & {\n  style?: CSSProperties;\n};\n\nconst CodeBlock: React.FC<Props> = ({ children, ...props }) => (\n  <pre {...props}>\n    <code>{children}</code>\n  </pre>\n);\n\nexport default CodeBlock;\n","import React, { CSSProperties } from 'react';\n\nconst style: CSSProperties = {\n  position: 'absolute',\n  top: 0,\n  right: 0,\n  border: 0,\n  fill: '#fff',\n  color: '#151513',\n};\n\nconst ForkMe: React.FC = () => (\n  <a\n    href=\"https://github.com/grubersjoe/react-github-calendar\"\n    className=\"github-corner\"\n    aria-label=\"View source on GitHub\"\n  >\n    <svg width=\"80\" height=\"80\" viewBox=\"0 0 250 250\" style={style} aria-hidden=\"true\">\n      <path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\" />\n      <path\n        d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\"\n        fill=\"hsl(313, 78%, 20%)\"\n        style={{ transformOrigin: '130px 106px' }}\n        className=\"octo-arm\"\n      />\n      <path\n        d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\"\n        fill=\"hsl(313, 78%, 20%)\"\n        className=\"octo-body\"\n      />\n    </svg>\n  </a>\n);\n\nexport default ForkMe;\n","import React, { useState, FormEventHandler } from 'react';\nimport GitHubCalendar from 'react-github-calendar';\nimport ReactTooltip from 'react-tooltip';\nimport { format } from 'date-fns';\n\nimport 'typeface-public-sans';\nimport './Demo.css';\n\nimport CodeBlock from './CodeBlock';\nimport ForkMe from './ForkMe';\n\nconst Demo: React.FC = () => {\n  const [username, setUsername] = useState('grubersjoe');\n  const input = React.createRef<HTMLInputElement>();\n\n  const updateUsername: FormEventHandler = event => {\n    event.preventDefault();\n    if (input.current) {\n      setUsername(String(input.current.value).toLowerCase());\n    }\n  };\n\n  return (\n    <div>\n      <header>\n        <ForkMe />\n        <div className=\"container\">\n          <h1>GitHub Contributions Calendar</h1>\n          <div>A React component to display a GitHub contributions graph</div>\n          <form onSubmit={updateUsername}>\n            <input type=\"text\" placeholder=\"Enter your GitHub username\" ref={input} required />\n            <button type=\"submit\">Show calendar</button>\n          </form>\n        </div>\n      </header>\n\n      <main className=\"container\">\n        <GitHubCalendar username={username} />\n\n        <section>\n          <h2>Installation</h2>\n          <CodeBlock style={{ marginTop: '0.5rem' }}>yarn install react-github-calendar</CodeBlock>\n          <p>Then in your code:</p>\n          <CodeBlock>\n            {`import GitHubCalendar from 'react-github-calendar';\n\n<GitHubCalendar username=\"${username}\" />`}\n          </CodeBlock>\n        </section>\n\n        <section>\n          <h2>Component properties</h2>\n          <div style={{ overflowX: 'auto' }}>\n            <table>\n              <thead>\n                <tr>\n                  <th>Property</th>\n                  <th>Type</th>\n                  <th>Default</th>\n                  <th>Description</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>username</td>\n                  <td>string</td>\n                  <td>-</td>\n                  <td>\n                    A GitHub username (<em>required, obviously</em>)\n                  </td>\n                </tr>\n                <tr>\n                  <td>blockMargin</td>\n                  <td>number</td>\n                  <td>2</td>\n                  <td>Margin between blocks</td>\n                </tr>\n                <tr>\n                  <td>blockSize</td>\n                  <td>number</td>\n                  <td>12</td>\n                  <td>Size of one block (one day)</td>\n                </tr>\n                <tr>\n                  <td>color</td>\n                  <td>\n                    string|<a href=\"https://www.npmjs.com/package/tinycolor2\">Color</a>\n                  </td>\n                  <td>undefined</td>\n                  <td>Base color to compute graph intensity colors (see below)</td>\n                </tr>\n                <tr>\n                  <td>dateFormat</td>\n                  <td>string</td>\n                  <td>'MMM d, yyyy'</td>\n                  <td>\n                    A{' '}\n                    <code>\n                      <a href=\"https://date-fns.org/v2.9.0/docs/format\">date-fns/format</a>\n                    </code>{' '}\n                    compatible date string\n                  </td>\n                </tr>\n                <tr>\n                  <td>fontSize</td>\n                  <td>number</td>\n                  <td>14</td>\n                  <td>Base font size for text in chart. The title above (@user) is 25% larger.</td>\n                </tr>\n                <tr>\n                  <td>fullYear</td>\n                  <td>boolean</td>\n                  <td>true</td>\n                  <td>\n                    Whether to show the whole last year starting now or this year only (starting in\n                    January).\n                  </td>\n                </tr>\n                <tr>\n                  <td>theme</td>\n                  <td>Theme</td>\n                  <td>\n                    <em>GitHub theme</em>\n                  </td>\n                  <td>A object specifying all theme colors explicitly (see below)</td>\n                </tr>\n                <tr>\n                  <td>tooltips</td>\n                  <td>boolean</td>\n                  <td>true</td>\n                  <td>\n                    Whether to add <code>data-tip</code> attributes to the blocks. Add{' '}\n                    <code>react-tooltip</code> and use it as child of this component. See below\n                    example.\n                  </td>\n                </tr>\n                <tr>\n                  <td>years</td>\n                  <td>number[]</td>\n                  <td>[{format(new Date(), 'yyyy')}]</td>\n                  <td>\n                    List of to be rendered years. Defaults to the current year. If no data is\n                    available the chart for this year will be ommited.\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </section>\n\n        <section>\n          <h2>Examples</h2>\n\n          <ol>\n            <li>\n              <a href=\"#show-contributions-of-last-year\">Show contributions of last year</a>\n            </li>\n            <li>\n              <a href=\"#display-this-year-only\">Display this year only</a>\n            </li>\n            <li>\n              <a href=\"#show-several-years\">Show several years</a>\n            </li>\n            <li>\n              <a href=\"#set-the-color-theme\">Set the color theme</a>\n            </li>\n            <li>\n              <a href=\"#add-tooltips\">Add tooltips</a>\n            </li>\n            <li>\n              <a href=\"#different-block-size\">Different block size</a>\n            </li>\n            <li>\n              <a href=\"#different-block-margin\">Different block margin</a>\n            </li>\n            <li>\n              <a href=\"#chart-font-size\">Chart font size</a>\n            </li>\n          </ol>\n\n          <hr />\n\n          <h3 id=\"show-contributions-of-last-year\">Show contributions of last year</h3>\n          <p>By default the last whole year is shown.</p>\n          <CodeBlock>{`<GitHubCalendar username=\"${username}\" />`}</CodeBlock>\n          <GitHubCalendar username={username} />\n\n          <hr />\n\n          <h3 id=\"display-this-year-only\">Display this year only</h3>\n          <p>\n            You might prefer the calendar for the current year to start in January (instead of\n            showing the last twelve months).\n          </p>\n          <CodeBlock>{`<GitHubCalendar username=\"${username}\" fullYear={false} />`}</CodeBlock>\n          <GitHubCalendar username={username} fullYear={false} />\n\n          <hr />\n\n          <h3 id=\"show-several-years\">Show several years</h3>\n          <p>To display multiple years, pass an array into the component:</p>\n          <CodeBlock>\n            {`<GitHubCalendar username=\"${username}\" years={[2018, 2017]} fullYear={false}/>`}\n          </CodeBlock>\n          <GitHubCalendar username={username} years={[2018, 2017]} fullYear={false} />\n\n          <hr />\n\n          <h3 id=\"set-the-color-theme\">Set the color theme</h3>\n          <p>\n            Either set a base color (any valid CSS color) to calculate the color hues for the\n            contribution intensity automatically or specify the different theme colors explicitly.\n            If a color is set, the theme will be ignored. If neither color or theme is set, the\n            standard GitHub colors will be used (as in these examples).\n          </p>\n          <CodeBlock>{`<GitHubCalendar username=\"${username}\" color=\"hsl(203, 82%, 33%)\" />`}</CodeBlock>\n          <GitHubCalendar username={username} color=\"hsl(203, 82%, 33%)\" />\n          <p>Set the colors explicitly like this:</p>\n          <CodeBlock>\n            {`const defaultTheme = {\n  background: 'transparent',\n  text: '#000',\n  grade4: '#196127',\n  grade3: '#239a3b',\n  grade2: '#7bc96f',\n  grade1: '#c6e48b',\n  grade0: '#ebedf0',\n};\n\n<GitHubCalendar username=\"${username}\" theme={defaultTheme} />`}\n          </CodeBlock>\n          <GitHubCalendar username={username} />\n\n          <hr />\n\n          <h3 id=\"add-tooltips\">Add tooltips</h3>\n          <p>\n            In order to show tooltips on hover, you need to add another dependency{' '}\n            <code>react-tooltip</code>. Add this component then as child of the calendar. Make sure\n            to enable the `html` property in the <code>ReactTooltip</code> component to display the\n            message correctly.\n          </p>\n          <CodeBlock>\n            {`<div>\n    <GitHubCalendar username=\"${username}\">\n      <ReactTooltip delayShow={50} html />\n    </GitHubCalendar>\n  </div>`}\n          </CodeBlock>\n          <div>\n            <GitHubCalendar username={username}>\n              <ReactTooltip delayShow={50} html />\n            </GitHubCalendar>\n          </div>\n\n          <hr />\n\n          <h3 id=\"different-block-size\">Different block size</h3>\n          <p>The block size (12 per default) is configurable:</p>\n          <CodeBlock>{`<GitHubCalendar username=\"${username}\" blockSize={10} />`}</CodeBlock>\n          <GitHubCalendar username={username} blockSize={10} />\n\n          <hr />\n\n          <h3 id=\"different-block-margin\">Different block margin (and size)</h3>\n          <p>Analogously the block margin can be adjusted.</p>\n          <CodeBlock>{`<GitHubCalendar username=\"${username}\" blockSize={10} blockMargin={4} />`}</CodeBlock>\n          <GitHubCalendar username={username} blockSize={10} blockMargin={4} />\n\n          <hr />\n\n          <h3 id=\"chart-font-size\">Chart font size</h3>\n          <p>\n            Finally, there is a property to set the fontsize of the text inside the chart. This\n            comes in handy, if a large block size or margin is set. The default base font size is\n            14px.\n          </p>\n          <CodeBlock>{`<GitHubCalendar username=\"${username}\" fontSize={14} blockSize={12} />`}</CodeBlock>\n          <GitHubCalendar username={username} fontSize={14} blockSize={12} />\n        </section>\n      </main>\n    </div>\n  );\n};\n\nexport default Demo;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Demo from './Demo';\n\nReactDOM.render(<Demo />, document.getElementById('root'));\n"],"sourceRoot":""}